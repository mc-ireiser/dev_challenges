{
	"info": {
		"_postman_id": "5b5d964e-bdc1-4405-b565-51c8640b9bae",
		"name": "workana_dev",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "user",
			"item": [
				{
					"name": "createUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response have a name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var name = jsonData.name;\r",
									"    pm.expect(name).string\r",
									"    pm.environment.set(\"name\", name);\r",
									"});\r",
									"\r",
									"pm.test(\"Response have a  userName\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var userName = jsonData.userName;\r",
									"    pm.expect(userName).string\r",
									"    pm.environment.set(\"userName\", userName);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Jesus Rodriguez\",\r\n    \"userName\": \"ireiser\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "loginUser",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userName\": \"ireiser\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/user/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "issue",
			"item": [
				{
					"name": "getIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "joinIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "userName",
								"value": "{{userName}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}/join",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}",
								"join"
							]
						}
					},
					"response": []
				},
				{
					"name": "voteIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "userName",
								"value": "{{userName}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"value\": 20\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}/vote",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}",
								"vote"
							]
						}
					},
					"response": []
				},
				{
					"name": "allIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setNextRequest(\"voteIssue\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8082/issue/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"all"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "resetDB",
			"item": [
				{
					"name": "clearAll",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8082/reset",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"reset"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "test",
			"item": [
				{
					"name": "clearAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8082/reset",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"reset"
							]
						}
					},
					"response": []
				},
				{
					"name": "createUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should have a status code 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var name = jsonData.name;\r",
									"    pm.expect(name).string\r",
									"    pm.environment.set(\"name\", name);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a userName\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var userName = jsonData.userName;\r",
									"    pm.expect(userName).string\r",
									"    pm.environment.set(\"userName\", userName);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Jesus Rodriguez\",\r\n    \"userName\": \"ireiser\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "createUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should have a status code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a message `All fields are required`\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var message = jsonData.message;\r",
									"    pm.expect(message).to.eql(\"All fields are required\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"\",\r\n    \"userName\": \"ireiser\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "allIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a empty Array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var issues = jsonData.issues;\r",
									"    pm.expect(issues.length).to.eql(0)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8082/issue/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "getIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should have a status code 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a message `The requested issue does not exist`\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var message = jsonData.message;\r",
									"    pm.expect(message).to.eql(\"The requested issue does not exist\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "userName",
								"value": "{{userName}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "joinIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a message `A new issue was created`\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var message = jsonData.message;\r",
									"    pm.expect(message).to.eql(\"A new issue was created\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "userName",
								"value": "{{userName}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}/join",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}",
								"join"
							]
						}
					},
					"response": []
				},
				{
					"name": "joinIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a message `The user was already attached to the issue`\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var message = jsonData.message;\r",
									"    pm.expect(message).to.eql(\"The user was already attached to the issue\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "userName",
								"value": "{{userName}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}/join",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}",
								"join"
							]
						}
					},
					"response": []
				},
				{
					"name": "allIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have an Array with 1 element\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var issues = jsonData.issues;\r",
									"    pm.expect(issues.length).to.eql(1)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8082/issue/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "getIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have status `voting` and Array `members` with 1 element\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var status = jsonData.issue.status;\r",
									"    var members = jsonData.issue.members;\r",
									"    pm.expect(status).to.eql(\"voting\")\r",
									"    pm.expect(members.length).to.eql(1)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "voteIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a message `The vote was counted`\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var message = jsonData.message;\r",
									"    pm.expect(message).to.eql(\"The vote was counted\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "userName",
								"type": "text",
								"value": "{{userName}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"value\": 20\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}/vote",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}",
								"vote"
							]
						}
					},
					"response": []
				},
				{
					"name": "voteIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a message `The issue has already been voted`\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var message = jsonData.message;\r",
									"    pm.expect(message).to.eql(\"The issue has already been voted\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "userName",
								"type": "text",
								"value": "{{userName}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"value\": 20\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}/vote",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}",
								"vote"
							]
						}
					},
					"response": []
				},
				{
					"name": "getIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have status `reveal` avg `20` and Array `members` with 1 element\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var status = jsonData.issue.status;\r",
									"    var avg = parseFloat(jsonData.issue.avg);\r",
									"    var members = jsonData.issue.members;\r",
									"    pm.expect(status).to.eql(\"reveal\")\r",
									"    pm.expect(avg).to.eql(20)\r",
									"    pm.expect(members.length).to.eql(1)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should have a status code 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var name = jsonData.name;\r",
									"    pm.expect(name).string\r",
									"    pm.environment.set(\"name\", name);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a userName\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var userName = jsonData.userName;\r",
									"    pm.expect(userName).string\r",
									"    pm.environment.set(\"userName\", userName);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Test Name\",\r\n    \"userName\": \"test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "joinIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a message `Joined the issue successfully`\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var message = jsonData.message;\r",
									"    pm.expect(message).to.eql(\"Joined the issue successfully\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "userName",
								"type": "text",
								"value": "{{userName}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}/join",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}",
								"join"
							]
						}
					},
					"response": []
				},
				{
					"name": "voteIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a message `The vote was counted`\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var message = jsonData.message;\r",
									"    pm.expect(message).to.eql(\"The vote was counted\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "userName",
								"type": "text",
								"value": "{{userName}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"value\": 20\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}/vote",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}",
								"vote"
							]
						}
					},
					"response": []
				},
				{
					"name": "getIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have status `reveal` avg `20` and Array `members` with 2 element\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var status = jsonData.issue.status;\r",
									"    var avg = parseFloat(jsonData.issue.avg);\r",
									"    var members = jsonData.issue.members;\r",
									"    pm.expect(status).to.eql(\"reveal\")\r",
									"    pm.expect(avg).to.eql(20)\r",
									"    pm.expect(members.length).to.eql(2)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should have a status code 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var name = jsonData.name;\r",
									"    pm.expect(name).string\r",
									"    pm.environment.set(\"name\", name);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a userName\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var userName = jsonData.userName;\r",
									"    pm.expect(userName).string\r",
									"    pm.environment.set(\"userName\", userName);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Test Name 2\",\r\n    \"userName\": \"test1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "joinIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a message `Joined the issue successfully`\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var message = jsonData.message;\r",
									"    pm.expect(message).to.eql(\"Joined the issue successfully\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "userName",
								"type": "text",
								"value": "{{userName}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}/join",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}",
								"join"
							]
						}
					},
					"response": []
				},
				{
					"name": "voteIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a message `The vote was counted`\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var message = jsonData.message;\r",
									"    pm.expect(message).to.eql(\"The vote was counted\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "userName",
								"type": "text",
								"value": "{{userName}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"value\": \"?\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}/vote",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}",
								"vote"
							]
						}
					},
					"response": []
				},
				{
					"name": "getIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have status `reveal` avg `20` and Array `members` with 2 element\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var status = jsonData.issue.status;\r",
									"    var avg = parseFloat(jsonData.issue.avg);\r",
									"    var members = jsonData.issue.members;\r",
									"    pm.expect(status).to.eql(\"reveal\")\r",
									"    pm.expect(avg).to.eql(20)\r",
									"    pm.expect(members.length).to.eql(3)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}