{
	"info": {
		"_postman_id": "5b5d964e-bdc1-4405-b565-51c8640b9bae",
		"name": "workana_dev",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "user",
			"item": [
				{
					"name": "createUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "275c4847-2ec3-4328-937e-15964e778c89",
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response have a name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var name = jsonData.name;\r",
									"    pm.expect(name).string\r",
									"    pm.environment.set(\"name\", name);\r",
									"});\r",
									"\r",
									"pm.test(\"Response have a  token\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var token = jsonData.token;\r",
									"    pm.expect(token).string\r",
									"    pm.environment.set(\"token\", token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "43a67bdc-b8fc-4519-a71c-c34648271bff",
								"exec": [
									"postman.setNextRequest(\"joinIssue\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Jesus Rodriguez\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"user"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "issue",
			"item": [
				{
					"name": "getIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6cb44151-79ef-42b4-8bc6-e6605913f4d8",
								"exec": [
									"postman.setNextRequest(\"allIssue\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "{{token}}",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "joinIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3a942f55-371d-46e3-b439-16c0626d1cd9",
								"exec": [
									"postman.setNextRequest(\"getIssue\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{name}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}/join",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}",
								"join"
							]
						}
					},
					"response": []
				},
				{
					"name": "voteIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b8735da4-9730-49d7-9174-e7c15939a052",
								"exec": [
									"postman.setNextRequest(\"null\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"value\": 20\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}/vote",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}",
								"vote"
							]
						}
					},
					"response": []
				},
				{
					"name": "allIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e6edc6d6-1030-43d4-9cc1-fac69c5d7c4f",
								"exec": [
									"postman.setNextRequest(\"voteIssue\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8082/issue/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"all"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "resetDB",
			"item": [
				{
					"name": "clearAll",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8082/reset",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"reset"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "test",
			"item": [
				{
					"name": "clearAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5793d116-cc4e-447f-b039-789495ee081f",
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8082/reset",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"reset"
							]
						}
					},
					"response": []
				},
				{
					"name": "createUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "27ecc0d3-7646-49ed-9dd8-3eda0967ac0d",
								"exec": [
									"pm.test(\"Should have a status code 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var name = jsonData.name;\r",
									"    pm.expect(name).string\r",
									"    pm.environment.set(\"name\", name);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a token\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var token = jsonData.token;\r",
									"    pm.expect(token).string\r",
									"    pm.environment.set(\"token\", token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2828b6b8-058d-4bbc-9d7f-eaa72c02495d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Test Name\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "createUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e06b56c0-2da2-4e99-945b-b32a8c82e456",
								"exec": [
									"pm.test(\"Should have a status code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a message `A name is required`\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var message = jsonData.message;\r",
									"    pm.expect(message).to.eql(\"A name is required\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "44057e65-5a31-4f19-bd05-cb440358e66d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "allIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4380404a-fae3-49f7-a2af-1ba6eff094c9",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6a536524-762b-4bac-9ea5-c066ad332be3",
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a empty Array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var issues = jsonData.issues;\r",
									"    pm.expect(issues.length).to.eql(0)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8082/issue/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "getIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "62d7b316-4ce8-4b9f-99e0-52e0d95314a0",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "dd8dc747-fb37-4259-bc1d-ae6cd3b285d1",
								"exec": [
									"pm.test(\"Should have a status code 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a message `The requested issue does not exist`\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var message = jsonData.message;\r",
									"    pm.expect(message).to.eql(\"The requested issue does not exist\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "{{token}}",
								"type": "text",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "joinIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7081c07f-ea51-4d47-b9de-e29d9c128d9b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2496b116-7639-4271-ae9e-a18d7daf2de4",
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a message `A new issue was created`\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var message = jsonData.message;\r",
									"    pm.expect(message).to.eql(\"A new issue was created\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}/join",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}",
								"join"
							]
						}
					},
					"response": []
				},
				{
					"name": "joinIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a71cbc41-7536-4196-988f-5661b6548f4a",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "25dd6fc9-b415-4836-8eb8-791d5b7ccbc4",
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a message `The user was already attached to the issue`\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var message = jsonData.message;\r",
									"    pm.expect(message).to.eql(\"The user was already attached to the issue\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}/join",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}",
								"join"
							]
						}
					},
					"response": []
				},
				{
					"name": "allIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e9b31766-5f74-4aea-b605-ff17085c2163",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8a7634a0-6448-4fa6-90ff-858474f0a5d7",
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have an Array with 1 element\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var issues = jsonData.issues;\r",
									"    pm.expect(issues.length).to.eql(1)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8082/issue/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "getIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a591877d-9868-4e50-9361-2dd99c0c9453",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3f6a7864-ede6-4075-bc74-2b69ca5e71fd",
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have status `voting` and Array `members` with 1 element\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var status = jsonData.issue.status;\r",
									"    var members = jsonData.issue.members;\r",
									"    pm.expect(status).to.eql(\"voting\")\r",
									"    pm.expect(members.length).to.eql(1)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "{{token}}",
								"type": "text",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "voteIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "be75839c-9e41-4e4a-a4bb-5d6fb435a610",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3d164431-e828-41f4-ae3f-000189426a54",
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a message `The vote was counted`\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var message = jsonData.message;\r",
									"    pm.expect(message).to.eql(\"The vote was counted\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"value\": 20\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}/vote",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}",
								"vote"
							]
						}
					},
					"response": []
				},
				{
					"name": "voteIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "47fa9f20-aebe-4323-92fc-fef7a3e7752f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5f650000-1c15-4bf5-839f-ba12d8a47b41",
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a message `The issue has already been voted`\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var message = jsonData.message;\r",
									"    pm.expect(message).to.eql(\"The issue has already been voted\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"value\": 20\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}/vote",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}",
								"vote"
							]
						}
					},
					"response": []
				},
				{
					"name": "getIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a74e71f7-ea56-42c1-b793-ec07bcd68a35",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7ed3f520-1d25-464a-a342-a43f069568da",
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have status `reveal` avg `20` and Array `members` with 1 element\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var status = jsonData.issue.status;\r",
									"    var avg = parseFloat(jsonData.issue.avg);\r",
									"    var members = jsonData.issue.members;\r",
									"    pm.expect(status).to.eql(\"reveal\")\r",
									"    pm.expect(avg).to.eql(20)\r",
									"    pm.expect(members.length).to.eql(1)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "{{token}}",
								"type": "text",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5369152b-ddb6-462a-87b9-46e8e4f2d987",
								"exec": [
									"pm.test(\"Should have a status code 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var name = jsonData.name;\r",
									"    pm.expect(name).string\r",
									"    pm.environment.set(\"name\", name);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a token\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var token = jsonData.token;\r",
									"    pm.expect(token).string\r",
									"    pm.environment.set(\"token\", token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "55ef9b2a-30a2-4211-a43e-0989fea21dee",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Test Name\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "joinIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cb43a035-13e2-4170-931d-f992c24572cb",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "98300d68-fb2f-450e-bfbd-34828e561484",
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a message `Joined the issue successfully`\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var message = jsonData.message;\r",
									"    pm.expect(message).to.eql(\"Joined the issue successfully\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}/join",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}",
								"join"
							]
						}
					},
					"response": []
				},
				{
					"name": "voteIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9a9491b3-cf26-430a-89c2-958744d9c2c9",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "59a42b74-2e17-42c6-aae3-438f1a982613",
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a message `The vote was counted`\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var message = jsonData.message;\r",
									"    pm.expect(message).to.eql(\"The vote was counted\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"value\": 20\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}/vote",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}",
								"vote"
							]
						}
					},
					"response": []
				},
				{
					"name": "getIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "fb02749b-7d4f-49e7-8843-115ad95e388a",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d28d3cdd-b40c-4a05-9a83-aa1a8013f4a7",
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have status `reveal` avg `20` and Array `members` with 2 element\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var status = jsonData.issue.status;\r",
									"    var avg = parseFloat(jsonData.issue.avg);\r",
									"    var members = jsonData.issue.members;\r",
									"    pm.expect(status).to.eql(\"reveal\")\r",
									"    pm.expect(avg).to.eql(20)\r",
									"    pm.expect(members.length).to.eql(2)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "{{token}}",
								"type": "text",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "772deead-f930-405f-ab3c-fb09beb96a08",
								"exec": [
									"pm.test(\"Should have a status code 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var name = jsonData.name;\r",
									"    pm.expect(name).string\r",
									"    pm.environment.set(\"name\", name);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a token\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var token = jsonData.token;\r",
									"    pm.expect(token).string\r",
									"    pm.environment.set(\"token\", token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b4228dc7-bb8f-4587-a7cd-a240013a0ced",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Test Name\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "joinIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "10a4ddbe-cb9d-402f-bea0-db0a5416d98e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6da1c4e8-59ca-4fd4-b239-4dced2360b18",
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a message `Joined the issue successfully`\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var message = jsonData.message;\r",
									"    pm.expect(message).to.eql(\"Joined the issue successfully\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}/join",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}",
								"join"
							]
						}
					},
					"response": []
				},
				{
					"name": "voteIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a7af6eaa-1236-4007-9741-540fbbb0dc37",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d1757164-2f56-488f-8989-beebb4c37c67",
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have a message `The vote was counted`\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var message = jsonData.message;\r",
									"    pm.expect(message).to.eql(\"The vote was counted\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"value\": \"?\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}/vote",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}",
								"vote"
							]
						}
					},
					"response": []
				},
				{
					"name": "getIssue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ff858ce4-2e8a-47d5-8421-d04e1ecd5171",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "db53e9ec-fc84-43fc-ae4c-65c953519f69",
								"exec": [
									"pm.test(\"Should have a status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should have status `reveal` avg `20` and Array `members` with 2 element\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var status = jsonData.issue.status;\r",
									"    var avg = parseFloat(jsonData.issue.avg);\r",
									"    var members = jsonData.issue.members;\r",
									"    pm.expect(status).to.eql(\"reveal\")\r",
									"    pm.expect(avg).to.eql(20)\r",
									"    pm.expect(members.length).to.eql(3)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "{{token}}",
								"type": "text",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8082/issue/{{issue}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"issue",
								"{{issue}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}